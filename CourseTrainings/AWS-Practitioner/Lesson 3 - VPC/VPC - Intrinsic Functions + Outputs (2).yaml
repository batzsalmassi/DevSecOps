AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  VpcName:
    Type: String
    Description: Provide the name for the VPC 
    Default: MyVPC

  VpcCIDR: 
    Type: String
    Description: Provide the CIDR for the VPC
    Default: 10.0.0.0/16

Resources:
  VPC:
    Type: "AWS::EC2::VPC"
    Properties: 
      CidrBlock: !Ref VpcCIDR
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags: 
        - Key: Name
          Value: !Ref VpcName

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties: 
      Tags: 
        - Key: Name
          Value: "MyInternetGateway"

  AttachGateway:
    Type: "AWS::EC2::VPCGatewayAttachment"
    Properties: 
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  PublicSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [1, !Cidr [!Ref VpcCIDR, 5, 8]]
      AvailabilityZone: !Select
                        - 0
                        - !GetAZs
                          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VpcName, "PublicSubnet1", !Select [0, !GetAZs ""], !Select [1, !Cidr [!Ref VpcCIDR, 5, 8]]]]
  
  PublicSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: !Select [2, !Cidr [!Ref VpcCIDR, 5, 8]]
      AvailabilityZone: !Select
                        - 1
                        - !GetAZs
                          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VpcName, "PublicSubnet2", !Select [1, !GetAZs ""], !Select [2, !Cidr [!Ref VpcCIDR, 5, 8]]]]
 
  PrivateSubnet1:
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Select [3, !Cidr [!Ref VpcCIDR, 5, 8]]
      AvailabilityZone: !Select
                        - 0
                        - !GetAZs
                          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VpcName, "PrivateSubnet1", !Select [0, !GetAZs ""], !Select [3, !Cidr [!Ref VpcCIDR, 5, 8]]]]

  PrivateSubnet2:
    Type: "AWS::EC2::Subnet"
    Properties: 
      VpcId: !Ref VPC
      CidrBlock: !Select [4, !Cidr [!Ref VpcCIDR, 5, 8]]
      AvailabilityZone: !Select
                        - 1
                        - !GetAZs
                          Ref: 'AWS::Region'
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref VpcName, "PrivateSubnet2", !Select [1, !GetAZs ""], !Select [4, !Cidr [!Ref VpcCIDR, 5, 8]]]]

  PublicRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${AWS::StackName}-PublicRouteTable

  PrivateRouteTable:
    Type: "AWS::EC2::RouteTable"
    Properties: 
      VpcId: !Ref VPC
      Tags: 
        - Key: Name
          Value: !Sub ${AWS::StackName}-PrivateRouteTable

  PublicRoute:
    Type: "AWS::EC2::Route"
    DependsOn: AttachGateway
    Properties: 
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref InternetGateway

  PublicSubnet1Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DependsOn: "PublicRouteTable"
    Properties: 
      SubnetId: !Ref PublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DependsOn: "PublicRouteTable"
    Properties: 
      SubnetId: !Ref PublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateSubnet1Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DependsOn: "PrivateRouteTable"
    Properties: 
      SubnetId: !Ref PrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2Association:
    Type: "AWS::EC2::SubnetRouteTableAssociation"
    DependsOn: "PrivateRouteTable"
    Properties: 
      SubnetId: !Ref PrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  PublicSecuirtyGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VPC
      GroupDescription: 'Allow All'
      GroupName: Allow All
      SecurityGroupIngress:
        - CidrIp: '0.0.0.0/0'
          IpProtocol: -1
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Allow All - SG

  PublicMyNetworkAcl:
    Type: 'AWS::EC2::NetworkAcl'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: !Sub ${AWS::StackName}-Allow All - NACL

  InboundRuleAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    DependsOn: PublicMyNetworkAcl
    Properties:
      NetworkAclId: !Ref PublicMyNetworkAcl
      RuleNumber: 100
      Protocol: -1
      Egress: false
      RuleAction: allow
      CidrBlock: '0.0.0.0/0'

  OutboundRuleAllowAll:
    Type: 'AWS::EC2::NetworkAclEntry'
    DependsOn: PublicMyNetworkAcl
    Properties:
      NetworkAclId: !Ref PublicMyNetworkAcl
      RuleNumber: 100
      Protocol: -1  # All protocols
      Egress: true
      RuleAction: allow
      CidrBlock: '0.0.0.0/0'
  
  NaclSubnetAssociatoin1:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicMyNetworkAcl 
      SubnetId: !Ref PublicSubnet1
  
  NaclSubnetAssociatoin2:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicMyNetworkAcl 
      SubnetId: !Ref PublicSubnet2
  
  NaclSubnetAssociatoin3:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicMyNetworkAcl 
      SubnetId: !Ref PrivateSubnet1
  
  NaclSubnetAssociatoin4:
    Type: AWS::EC2::SubnetNetworkAclAssociation
    Properties:
      NetworkAclId: !Ref PublicMyNetworkAcl 
      SubnetId: !Ref PrivateSubnet2
  
Outputs:
  VPCId:
    Description: VPC ID
    Value: !GetAtt VPC.VpcId
    Export:
      Name: StackVPC

  PublicSubnet1:
    Description: Public Subnet 1
    Value: !Ref PublicSubnet1
    Export:
      Name: PublicSubnet1

  PublicSubnet2:
    Description: Public Subnet 2
    Value: !Ref PublicSubnet2
    Export:
      Name: PublicSubnet2

  PrivateSubnet1:
    Description: Private Subnet 1
    Value: !Ref PrivateSubnet1
    Export:
      Name: PrivateSubnet1

  PrivateSubnet2:
    Description: Private Subnet 2
    Value: !Ref PrivateSubnet2
    Export:
      Name: PrivateSubnet2

  SecurityGroup:
    Description: PublicSecuirtyGroup
    Value: !GetAtt PublicSecuirtyGroup.GroupId
    Export:
      Name: Allow-All-SG

  NetworkAcl:
    Description: PublicMyNetworkAcl
    Value: !Ref PublicMyNetworkAcl
    Export:
      Name: Allow-All-NACL
  
  AvailabilityZone1:
    Description: Availability Zone 1
    Value: !Select [0, !GetAZs ""]
    Export:
      Name: AvailZone1

  AvailabilityZone2:
    Description: Availability Zone 2
    Value: !Select [1, !GetAZs ""]
    Export:
      Name: AvailZone2

