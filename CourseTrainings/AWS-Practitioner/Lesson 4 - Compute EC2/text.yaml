AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  OS1:
    Type: String
    Description: Choose Operation System For Instance 1
    AllowedValues:
      - Windows
      - AmazonLinux
      - Ubuntu
      - RedHat
    Default: AmazonLinux

  OS2:
    Type: String
    Description: Choose Operation System For Instance 2
    AllowedValues:
      - Windows
      - AmazonLinux
      - Ubuntu
      - RedHat
    Default: Windows
  
  Region:
    Type: String
    Description: Choose Region
    AllowedValues:
      - us-east-1
      - ca-central-1
    Default: us-east-1

Mappings:
  OSRegionMapping:
    'us-east-1':
      Windows: ami-03cd80cfebcbb4481
      AmazonLinux: ami-051f8a213df8bc089
      Ubuntu: ami-080e1f13689e07408
      RedHat: ami-0fe630eb857a6ec83
    'ca-central-1':
      Windows: ami-0f5a06fb334bd0825
      AmazonLinux: ami-07413789aae50b0e0
      Ubuntu: ami-05d4121edd74a9f06
      RedHat: ami-0d270005f18b0539a

Resources:
  MyInstance:
    Type: 'AWS::EC2::Instance'
    Properties:
      AvailabilityZone: !ImportValue 'VPC-AvailabilityZone1'
      ImageId: !FindInMap [OSRegionMapping, !Ref Region, !Ref OS1]
      InstanceType: t2.micro
      SubnetId: !ImportValue 'PublicSubnet1'
      SecurityGroupIds:
        - !ImportValue 'AllowAllSecurityGroup'
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Region, !Ref OS1, "Instance"]]

  MyInstance2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !FindInMap [OSRegionMapping, !Ref Region, !Ref OS2]
      InstanceType: t2.micro
      AvailabilityZone: !ImportValue 'VPC-AvailabilityZone2'
      SubnetId: !ImportValue 'PublicSubnet2'
      SecurityGroupIds:
        - !ImportValue 'AllowAllSecurityGroup'
      Tags:
        - Key: Name
          Value: !Join ["-", [!Ref Region, !Ref OS2, "Instance2"]]
